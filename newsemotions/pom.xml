<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.4.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.markettrender.newsemotions</groupId>
	<artifactId>newsemotions</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>newsemotions</name>
	<description>Extract emotions from a pack of news</description>

	<properties>
		<java.version>1.8</java.version>
		<spring-cloud.version>Hoxton.SR8</spring-cloud.version>
		<git.connection>git@github.com:amb690/news-emotions.git</git.connection>
		<docker.image.prefix>albertombln</docker.image.prefix>
		<docker.repository>news-emotions</docker.repository>
		<sonar.exclusions>
			src/main/java/com/markettrender/newsemotions/model/repository/**
		</sonar.exclusions>
		<sonar.test.exclusions>
        	src/test/**/*
    	</sonar.test.exclusions>
	</properties>
	
	<distributionManagement>
		<repository>
			<id>central</id>
			<name>a0dnuyjy7fkbp-artifactory-primary-0-releases</name>
			<url>https://markettrender.jfrog.io/artifactory/market-trender</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<name>a0dnuyjy7fkbp-artifactory-primary-0-snapshots</name>
			<url>https://markettrender.jfrog.io/artifactory/market-trender</url>
		</snapshotRepository>
	</distributionManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.9.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<preparationGoals>clean install</preparationGoals>
					<tagBase>https://github.com/amb690/news-emotions/tags</tagBase>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>1.4.13</version>
				<configuration>
					<googleContainerRegistryEnabled>false</googleContainerRegistryEnabled>
					<repository>
						${docker.image.prefix}/${docker.repository}
					</repository>
					<buildArgs>
						<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
					</buildArgs>
      				<serverId>docker-hub</serverId>
      				<registryUrl>https://index.docker.io/</registryUrl>
    				<tag>latest</tag>
				</configuration>
				<executions>
					<execution>
						<id>default</id>
						<phase>install</phase>
						<goals>
							<goal>build</goal>
							<goal>push</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		    <plugin>
		        <groupId>org.jacoco</groupId>
		        <artifactId>jacoco-maven-plugin</artifactId>
		        <version>0.8.2</version>
		        <executions>
		            <execution>
		                <goals>
		                    <goal>prepare-agent</goal>
		                </goals>
		            </execution>
		            <execution>
		                <id>report</id>
		                <phase>test</phase>
		                <goals>
		                    <goal>report</goal>
		                </goals>
		            </execution>
		        </executions>
		    </plugin>
		</plugins>
	</build>

</project>
